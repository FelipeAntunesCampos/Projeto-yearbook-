// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["mensagens", "alunos", "midia"] // Schemas para organização
}

// Tabela: Aluno
model Aluno {
  id        Int    @id @default(autoincrement())
  nome      String
  email     String @unique
  matricula String @unique

  // Relacionamentos 1 para Muitos
  mensagens Mensagem[]
  fotos     Foto[]

  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  @@map("alunos") // Mapeia o modelo 'Aluno' para a tabela 'alunos' no banco
}

// Tabela: Mensagem (Lado "MUITOS" do 1:M)
model Mensagem {
  id       Int    @id @default(autoincrement())
  conteudo String @db.VarChar(255)

  // Chave estrangeira (sem @unique para 1:M)
  alunoId Int
  aluno   Aluno @relation(fields: [alunoId], references: [id])

  criadoEm DateTime @default(now())

  @@map("mensagens") // Mapeia o modelo 'Mensagem' para a tabela 'mensagens' no banco
}

// Tabela: Foto (Lado "MUITOS" do 1:M)
model Foto {
  id        Int      @id @default(autoincrement())
  url       String   @db.Text // URL da foto
  descricao String? // Opcional
  // Chave estrangeira (sem @unique para 1:M)
  alunoId   Int
  aluno     Aluno    @relation(fields: [alunoId], references: [id])
  criadoEm  DateTime @default(now())

  @@map("fotos") // Mapeia o modelo 'Foto' para a tabela 'fotos' no banco
}
